################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################
version: "2.1"

services:

  ###############################################################
  #    Functions service
  ###############################################################

  greeter-functions:
    build:
      dockerfile: Dockerfile
      context: .
    expose:
      - "1108"
      - "9092"
    links:
      - "statefun-manager:statefun-manager"
      - "kafka:kafka"
      - "zookeeper:zookeeper" 
    ports:
      - "8080:8080"  
    depends_on:
      - kafka
    environment:
      APP_KAFKA_HOST: 172.20.128.2:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.20.128.2:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: 172.20.128.2:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: 172.20.128.2:9092

  ###############################################################
  #    StateFun runtime
  ###############################################################

  statefun-manager:
    image: apache/flink-statefun:3.0.0-java11
    expose:
      - "6123"
    ports:
      - "8081:8081"
    environment:
      ROLE: master
      MASTER_HOST: statefun-manager
    volumes:
      - ./module.yaml:/opt/statefun/modules/greeter/module.yaml

  statefun-worker:
    image: apache/flink-statefun:3.0.0-java11
    expose:
      - "6121"
      - "6122"
    depends_on:
      - statefun-manager
      - kafka
      - greeter-functions
    links:
      - "statefun-manager:statefun-manager"
      - "kafka:kafka"
      - "greeter-functions:greeter-functions"
    environment:
      ROLE: worker
      MASTER_HOST: statefun-manager
    volumes:
      - ./module.yaml:/opt/statefun/modules/greeter/module.yaml

  ###############################################################
  #    Kafka for ingress and egress
  ###############################################################

  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.3
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
    networks:
      static-network:
        ipv4_address: 172.20.128.3
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:5.4.3
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    links:
      - "zookeeper:zookeeper"
    networks:
      static-network:
        ipv4_address: 172.20.128.2
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 172.20.128.3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
          #docker-compose v3+ do not use ip_range
          ip_range: 172.28.5.0/24

  ###############################################################
  #    Simple Kafka JSON producer to simulate ingress events
  ###############################################################

#  user-logins-producer:
#    image: ververica/statefun-playground-producer:latest
#    depends_on:
#      - kafka
#      - statefun-worker
#    links:
#      - "kafka:kafka"
#    environment:
#      APP_PATH: /mnt/user-logins.txt
#      APP_KAFKA_HOST: kafka:9092
#      APP_KAFKA_TOPIC: user-logins
#      APP_JSON_PATH: user_id
#    volumes:
#      - ./user-logins.txt:/mnt/user-logins.txt